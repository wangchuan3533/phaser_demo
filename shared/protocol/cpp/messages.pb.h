// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#ifndef PROTOBUF_messages_2eproto__INCLUDED
#define PROTOBUF_messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_messages_2eproto();
void protobuf_AssignDesc_messages_2eproto();
void protobuf_ShutdownFile_messages_2eproto();

class Entity;
class JoinRoomReq;
class JoinRoomRes;
class LeaveRoomReq;
class LeaveRoomRes;
class CheckpointReq;
class CheckpointRes;
class UpdateNtf;
class Message;

enum MessageType {
  JOIN_ROOM_REQ = 1,
  JOIN_ROOM_RES = 2,
  LEAVE_ROOM_REQ = 3,
  LEAVE_ROOM_RES = 4,
  CHECKPOINT_REQ = 5,
  CHECKPOINT_RES = 6,
  UPDATE_NTF = 100
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = JOIN_ROOM_REQ;
const MessageType MessageType_MAX = UPDATE_NTF;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
// ===================================================================

class Entity : public ::google::protobuf::Message {
 public:
  Entity();
  virtual ~Entity();

  Entity(const Entity& from);

  inline Entity& operator=(const Entity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Entity& default_instance();

  void Swap(Entity* other);

  // implements Message ----------------------------------------------

  Entity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Entity& from);
  void MergeFrom(const Entity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required int32 src = 2;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 2;
  inline ::google::protobuf::int32 src() const;
  inline void set_src(::google::protobuf::int32 value);

  // required int32 dst = 3;
  inline bool has_dst() const;
  inline void clear_dst();
  static const int kDstFieldNumber = 3;
  inline ::google::protobuf::int32 dst() const;
  inline void set_dst(::google::protobuf::int32 value);

  // required uint32 offset = 4;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 4;
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Entity)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_src();
  inline void clear_has_src();
  inline void set_has_dst();
  inline void clear_has_dst();
  inline void set_has_offset();
  inline void clear_has_offset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 src_;
  ::google::protobuf::int32 dst_;
  ::google::protobuf::uint32 offset_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static Entity* default_instance_;
};
// -------------------------------------------------------------------

class JoinRoomReq : public ::google::protobuf::Message {
 public:
  JoinRoomReq();
  virtual ~JoinRoomReq();

  JoinRoomReq(const JoinRoomReq& from);

  inline JoinRoomReq& operator=(const JoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomReq& default_instance();

  void Swap(JoinRoomReq* other);

  // implements Message ----------------------------------------------

  JoinRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinRoomReq& from);
  void MergeFrom(const JoinRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:JoinRoomReq)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 room_id_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static JoinRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class JoinRoomRes : public ::google::protobuf::Message {
 public:
  JoinRoomRes();
  virtual ~JoinRoomRes();

  JoinRoomRes(const JoinRoomRes& from);

  inline JoinRoomRes& operator=(const JoinRoomRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomRes& default_instance();

  void Swap(JoinRoomRes* other);

  // implements Message ----------------------------------------------

  JoinRoomRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinRoomRes& from);
  void MergeFrom(const JoinRoomRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // required uint32 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint32 player_id() const;
  inline void set_player_id(::google::protobuf::uint32 value);

  // repeated .Entity entities = 3;
  inline int entities_size() const;
  inline void clear_entities();
  static const int kEntitiesFieldNumber = 3;
  inline const ::Entity& entities(int index) const;
  inline ::Entity* mutable_entities(int index);
  inline ::Entity* add_entities();
  inline const ::google::protobuf::RepeatedPtrField< ::Entity >&
      entities() const;
  inline ::google::protobuf::RepeatedPtrField< ::Entity >*
      mutable_entities();

  // required uint32 elapsed = 4;
  inline bool has_elapsed() const;
  inline void clear_elapsed();
  static const int kElapsedFieldNumber = 4;
  inline ::google::protobuf::uint32 elapsed() const;
  inline void set_elapsed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:JoinRoomRes)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_elapsed();
  inline void clear_has_elapsed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::RepeatedPtrField< ::Entity > entities_;
  ::google::protobuf::uint32 elapsed_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static JoinRoomRes* default_instance_;
};
// -------------------------------------------------------------------

class LeaveRoomReq : public ::google::protobuf::Message {
 public:
  LeaveRoomReq();
  virtual ~LeaveRoomReq();

  LeaveRoomReq(const LeaveRoomReq& from);

  inline LeaveRoomReq& operator=(const LeaveRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveRoomReq& default_instance();

  void Swap(LeaveRoomReq* other);

  // implements Message ----------------------------------------------

  LeaveRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveRoomReq& from);
  void MergeFrom(const LeaveRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LeaveRoomReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static LeaveRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class LeaveRoomRes : public ::google::protobuf::Message {
 public:
  LeaveRoomRes();
  virtual ~LeaveRoomRes();

  LeaveRoomRes(const LeaveRoomRes& from);

  inline LeaveRoomRes& operator=(const LeaveRoomRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveRoomRes& default_instance();

  void Swap(LeaveRoomRes* other);

  // implements Message ----------------------------------------------

  LeaveRoomRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveRoomRes& from);
  void MergeFrom(const LeaveRoomRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LeaveRoomRes)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static LeaveRoomRes* default_instance_;
};
// -------------------------------------------------------------------

class CheckpointReq : public ::google::protobuf::Message {
 public:
  CheckpointReq();
  virtual ~CheckpointReq();

  CheckpointReq(const CheckpointReq& from);

  inline CheckpointReq& operator=(const CheckpointReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckpointReq& default_instance();

  void Swap(CheckpointReq* other);

  // implements Message ----------------------------------------------

  CheckpointReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckpointReq& from);
  void MergeFrom(const CheckpointReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required int32 src = 2;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 2;
  inline ::google::protobuf::int32 src() const;
  inline void set_src(::google::protobuf::int32 value);

  // required int32 dst = 3;
  inline bool has_dst() const;
  inline void clear_dst();
  static const int kDstFieldNumber = 3;
  inline ::google::protobuf::int32 dst() const;
  inline void set_dst(::google::protobuf::int32 value);

  // required uint32 offset = 4;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 4;
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // required uint32 elapsed = 5;
  inline bool has_elapsed() const;
  inline void clear_elapsed();
  static const int kElapsedFieldNumber = 5;
  inline ::google::protobuf::uint32 elapsed() const;
  inline void set_elapsed(::google::protobuf::uint32 value);

  // required uint32 latency = 6;
  inline bool has_latency() const;
  inline void clear_latency();
  static const int kLatencyFieldNumber = 6;
  inline ::google::protobuf::uint32 latency() const;
  inline void set_latency(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CheckpointReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_src();
  inline void clear_has_src();
  inline void set_has_dst();
  inline void clear_has_dst();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_elapsed();
  inline void clear_has_elapsed();
  inline void set_has_latency();
  inline void clear_has_latency();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 src_;
  ::google::protobuf::int32 dst_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 elapsed_;
  ::google::protobuf::uint32 latency_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CheckpointReq* default_instance_;
};
// -------------------------------------------------------------------

class CheckpointRes : public ::google::protobuf::Message {
 public:
  CheckpointRes();
  virtual ~CheckpointRes();

  CheckpointRes(const CheckpointRes& from);

  inline CheckpointRes& operator=(const CheckpointRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckpointRes& default_instance();

  void Swap(CheckpointRes* other);

  // implements Message ----------------------------------------------

  CheckpointRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckpointRes& from);
  void MergeFrom(const CheckpointRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint32 elapsed = 3;
  inline bool has_elapsed() const;
  inline void clear_elapsed();
  static const int kElapsedFieldNumber = 3;
  inline ::google::protobuf::uint32 elapsed() const;
  inline void set_elapsed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CheckpointRes)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_elapsed();
  inline void clear_has_elapsed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 elapsed_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CheckpointRes* default_instance_;
};
// -------------------------------------------------------------------

class UpdateNtf : public ::google::protobuf::Message {
 public:
  UpdateNtf();
  virtual ~UpdateNtf();

  UpdateNtf(const UpdateNtf& from);

  inline UpdateNtf& operator=(const UpdateNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateNtf& default_instance();

  void Swap(UpdateNtf* other);

  // implements Message ----------------------------------------------

  UpdateNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateNtf& from);
  void MergeFrom(const UpdateNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Entity entities = 1;
  inline int entities_size() const;
  inline void clear_entities();
  static const int kEntitiesFieldNumber = 1;
  inline const ::Entity& entities(int index) const;
  inline ::Entity* mutable_entities(int index);
  inline ::Entity* add_entities();
  inline const ::google::protobuf::RepeatedPtrField< ::Entity >&
      entities() const;
  inline ::google::protobuf::RepeatedPtrField< ::Entity >*
      mutable_entities();

  // required uint32 elapsed = 2;
  inline bool has_elapsed() const;
  inline void clear_elapsed();
  static const int kElapsedFieldNumber = 2;
  inline ::google::protobuf::uint32 elapsed() const;
  inline void set_elapsed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UpdateNtf)
 private:
  inline void set_has_elapsed();
  inline void clear_has_elapsed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Entity > entities_;
  ::google::protobuf::uint32 elapsed_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static UpdateNtf* default_instance_;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  Message* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .MessageType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::MessageType type() const;
  inline void set_type(::MessageType value);

  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Message)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  int type_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static Message* default_instance_;
};
// ===================================================================


// ===================================================================

// Entity

// required uint32 id = 1;
inline bool Entity::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Entity::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Entity::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Entity::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Entity::id() const {
  // @@protoc_insertion_point(field_get:Entity.id)
  return id_;
}
inline void Entity::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Entity.id)
}

// required int32 src = 2;
inline bool Entity::has_src() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Entity::set_has_src() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Entity::clear_has_src() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Entity::clear_src() {
  src_ = 0;
  clear_has_src();
}
inline ::google::protobuf::int32 Entity::src() const {
  // @@protoc_insertion_point(field_get:Entity.src)
  return src_;
}
inline void Entity::set_src(::google::protobuf::int32 value) {
  set_has_src();
  src_ = value;
  // @@protoc_insertion_point(field_set:Entity.src)
}

// required int32 dst = 3;
inline bool Entity::has_dst() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Entity::set_has_dst() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Entity::clear_has_dst() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Entity::clear_dst() {
  dst_ = 0;
  clear_has_dst();
}
inline ::google::protobuf::int32 Entity::dst() const {
  // @@protoc_insertion_point(field_get:Entity.dst)
  return dst_;
}
inline void Entity::set_dst(::google::protobuf::int32 value) {
  set_has_dst();
  dst_ = value;
  // @@protoc_insertion_point(field_set:Entity.dst)
}

// required uint32 offset = 4;
inline bool Entity::has_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Entity::set_has_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Entity::clear_has_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Entity::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 Entity::offset() const {
  // @@protoc_insertion_point(field_get:Entity.offset)
  return offset_;
}
inline void Entity::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:Entity.offset)
}

// -------------------------------------------------------------------

// JoinRoomReq

// required uint32 room_id = 1;
inline bool JoinRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinRoomReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 JoinRoomReq::room_id() const {
  // @@protoc_insertion_point(field_get:JoinRoomReq.room_id)
  return room_id_;
}
inline void JoinRoomReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:JoinRoomReq.room_id)
}

// -------------------------------------------------------------------

// JoinRoomRes

// required uint32 room_id = 1;
inline bool JoinRoomRes::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinRoomRes::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinRoomRes::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinRoomRes::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 JoinRoomRes::room_id() const {
  // @@protoc_insertion_point(field_get:JoinRoomRes.room_id)
  return room_id_;
}
inline void JoinRoomRes::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:JoinRoomRes.room_id)
}

// required uint32 player_id = 2;
inline bool JoinRoomRes::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinRoomRes::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinRoomRes::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinRoomRes::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 JoinRoomRes::player_id() const {
  // @@protoc_insertion_point(field_get:JoinRoomRes.player_id)
  return player_id_;
}
inline void JoinRoomRes::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:JoinRoomRes.player_id)
}

// repeated .Entity entities = 3;
inline int JoinRoomRes::entities_size() const {
  return entities_.size();
}
inline void JoinRoomRes::clear_entities() {
  entities_.Clear();
}
inline const ::Entity& JoinRoomRes::entities(int index) const {
  // @@protoc_insertion_point(field_get:JoinRoomRes.entities)
  return entities_.Get(index);
}
inline ::Entity* JoinRoomRes::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:JoinRoomRes.entities)
  return entities_.Mutable(index);
}
inline ::Entity* JoinRoomRes::add_entities() {
  // @@protoc_insertion_point(field_add:JoinRoomRes.entities)
  return entities_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Entity >&
JoinRoomRes::entities() const {
  // @@protoc_insertion_point(field_list:JoinRoomRes.entities)
  return entities_;
}
inline ::google::protobuf::RepeatedPtrField< ::Entity >*
JoinRoomRes::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:JoinRoomRes.entities)
  return &entities_;
}

// required uint32 elapsed = 4;
inline bool JoinRoomRes::has_elapsed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinRoomRes::set_has_elapsed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinRoomRes::clear_has_elapsed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinRoomRes::clear_elapsed() {
  elapsed_ = 0u;
  clear_has_elapsed();
}
inline ::google::protobuf::uint32 JoinRoomRes::elapsed() const {
  // @@protoc_insertion_point(field_get:JoinRoomRes.elapsed)
  return elapsed_;
}
inline void JoinRoomRes::set_elapsed(::google::protobuf::uint32 value) {
  set_has_elapsed();
  elapsed_ = value;
  // @@protoc_insertion_point(field_set:JoinRoomRes.elapsed)
}

// -------------------------------------------------------------------

// LeaveRoomReq

// -------------------------------------------------------------------

// LeaveRoomRes

// -------------------------------------------------------------------

// CheckpointReq

// required uint32 id = 1;
inline bool CheckpointReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckpointReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckpointReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckpointReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CheckpointReq::id() const {
  // @@protoc_insertion_point(field_get:CheckpointReq.id)
  return id_;
}
inline void CheckpointReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CheckpointReq.id)
}

// required int32 src = 2;
inline bool CheckpointReq::has_src() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckpointReq::set_has_src() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckpointReq::clear_has_src() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckpointReq::clear_src() {
  src_ = 0;
  clear_has_src();
}
inline ::google::protobuf::int32 CheckpointReq::src() const {
  // @@protoc_insertion_point(field_get:CheckpointReq.src)
  return src_;
}
inline void CheckpointReq::set_src(::google::protobuf::int32 value) {
  set_has_src();
  src_ = value;
  // @@protoc_insertion_point(field_set:CheckpointReq.src)
}

// required int32 dst = 3;
inline bool CheckpointReq::has_dst() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckpointReq::set_has_dst() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckpointReq::clear_has_dst() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckpointReq::clear_dst() {
  dst_ = 0;
  clear_has_dst();
}
inline ::google::protobuf::int32 CheckpointReq::dst() const {
  // @@protoc_insertion_point(field_get:CheckpointReq.dst)
  return dst_;
}
inline void CheckpointReq::set_dst(::google::protobuf::int32 value) {
  set_has_dst();
  dst_ = value;
  // @@protoc_insertion_point(field_set:CheckpointReq.dst)
}

// required uint32 offset = 4;
inline bool CheckpointReq::has_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CheckpointReq::set_has_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CheckpointReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CheckpointReq::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 CheckpointReq::offset() const {
  // @@protoc_insertion_point(field_get:CheckpointReq.offset)
  return offset_;
}
inline void CheckpointReq::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:CheckpointReq.offset)
}

// required uint32 elapsed = 5;
inline bool CheckpointReq::has_elapsed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CheckpointReq::set_has_elapsed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CheckpointReq::clear_has_elapsed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CheckpointReq::clear_elapsed() {
  elapsed_ = 0u;
  clear_has_elapsed();
}
inline ::google::protobuf::uint32 CheckpointReq::elapsed() const {
  // @@protoc_insertion_point(field_get:CheckpointReq.elapsed)
  return elapsed_;
}
inline void CheckpointReq::set_elapsed(::google::protobuf::uint32 value) {
  set_has_elapsed();
  elapsed_ = value;
  // @@protoc_insertion_point(field_set:CheckpointReq.elapsed)
}

// required uint32 latency = 6;
inline bool CheckpointReq::has_latency() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CheckpointReq::set_has_latency() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CheckpointReq::clear_has_latency() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CheckpointReq::clear_latency() {
  latency_ = 0u;
  clear_has_latency();
}
inline ::google::protobuf::uint32 CheckpointReq::latency() const {
  // @@protoc_insertion_point(field_get:CheckpointReq.latency)
  return latency_;
}
inline void CheckpointReq::set_latency(::google::protobuf::uint32 value) {
  set_has_latency();
  latency_ = value;
  // @@protoc_insertion_point(field_set:CheckpointReq.latency)
}

// -------------------------------------------------------------------

// CheckpointRes

// required uint32 id = 1;
inline bool CheckpointRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckpointRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckpointRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckpointRes::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CheckpointRes::id() const {
  // @@protoc_insertion_point(field_get:CheckpointRes.id)
  return id_;
}
inline void CheckpointRes::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CheckpointRes.id)
}

// required uint32 ret = 2;
inline bool CheckpointRes::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckpointRes::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckpointRes::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckpointRes::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CheckpointRes::ret() const {
  // @@protoc_insertion_point(field_get:CheckpointRes.ret)
  return ret_;
}
inline void CheckpointRes::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:CheckpointRes.ret)
}

// required uint32 elapsed = 3;
inline bool CheckpointRes::has_elapsed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckpointRes::set_has_elapsed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckpointRes::clear_has_elapsed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckpointRes::clear_elapsed() {
  elapsed_ = 0u;
  clear_has_elapsed();
}
inline ::google::protobuf::uint32 CheckpointRes::elapsed() const {
  // @@protoc_insertion_point(field_get:CheckpointRes.elapsed)
  return elapsed_;
}
inline void CheckpointRes::set_elapsed(::google::protobuf::uint32 value) {
  set_has_elapsed();
  elapsed_ = value;
  // @@protoc_insertion_point(field_set:CheckpointRes.elapsed)
}

// -------------------------------------------------------------------

// UpdateNtf

// repeated .Entity entities = 1;
inline int UpdateNtf::entities_size() const {
  return entities_.size();
}
inline void UpdateNtf::clear_entities() {
  entities_.Clear();
}
inline const ::Entity& UpdateNtf::entities(int index) const {
  // @@protoc_insertion_point(field_get:UpdateNtf.entities)
  return entities_.Get(index);
}
inline ::Entity* UpdateNtf::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:UpdateNtf.entities)
  return entities_.Mutable(index);
}
inline ::Entity* UpdateNtf::add_entities() {
  // @@protoc_insertion_point(field_add:UpdateNtf.entities)
  return entities_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Entity >&
UpdateNtf::entities() const {
  // @@protoc_insertion_point(field_list:UpdateNtf.entities)
  return entities_;
}
inline ::google::protobuf::RepeatedPtrField< ::Entity >*
UpdateNtf::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:UpdateNtf.entities)
  return &entities_;
}

// required uint32 elapsed = 2;
inline bool UpdateNtf::has_elapsed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateNtf::set_has_elapsed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateNtf::clear_has_elapsed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateNtf::clear_elapsed() {
  elapsed_ = 0u;
  clear_has_elapsed();
}
inline ::google::protobuf::uint32 UpdateNtf::elapsed() const {
  // @@protoc_insertion_point(field_get:UpdateNtf.elapsed)
  return elapsed_;
}
inline void UpdateNtf::set_elapsed(::google::protobuf::uint32 value) {
  set_has_elapsed();
  elapsed_ = value;
  // @@protoc_insertion_point(field_set:UpdateNtf.elapsed)
}

// -------------------------------------------------------------------

// Message

// required .MessageType type = 1;
inline bool Message::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::MessageType Message::type() const {
  // @@protoc_insertion_point(field_get:Message.type)
  return static_cast< ::MessageType >(type_);
}
inline void Message::set_type(::MessageType value) {
  assert(::MessageType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Message.type)
}

// required bytes data = 2;
inline bool Message::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& Message::data() const {
  // @@protoc_insertion_point(field_get:Message.data)
  return *data_;
}
inline void Message::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Message.data)
}
inline void Message::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Message.data)
}
inline void Message::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Message.data)
}
inline ::std::string* Message::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Message.data)
  return data_;
}
inline ::std::string* Message::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Message::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Message.data)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MessageType>() {
  return ::MessageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_2eproto__INCLUDED
